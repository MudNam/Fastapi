name: Blue-Green Deployment with Docker

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  ZONE: us-central1-a
  INSTANCE_GROUP: your-instance-group
  CONTAINER_REGISTRY: gcr.io
  IMAGE_NAME: ${{ env.CONTAINER_REGISTRY }}/${{ env.PROJECT_ID }}/your-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for GCR
        run: |
          gcloud auth configure-docker ${{ env.CONTAINER_REGISTRY }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create new instance template
        run: |
          # Create new template version
          TEMPLATE_VERSION="template-$(date +%Y%m%d-%H%M%S)"
          
          # Create new instance template with Docker
          gcloud compute instance-templates create $INSTANCE_GROUP-$TEMPLATE_VERSION \
            --machine-type=e2-standard-4 \
            --image-family=cos-stable \
            --image-project=cos-cloud \
            --boot-disk-size=50GB \
            --container-image=${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --tags=http-server \
            --scopes=cloud-platform

      - name: Update instance group
        run: |
          # Update instance group to use new template
          gcloud compute instance-groups managed set-instance-template $INSTANCE_GROUP \
            --template=$INSTANCE_GROUP-$TEMPLATE_VERSION \
            --zone=$ZONE

          # Start rolling update
          gcloud compute instance-groups managed rolling-action start-update $INSTANCE_GROUP \
            --zone=$ZONE \
            --max-unavailable=1 \
            --max-surge=1

      - name: Wait for update to complete
        run: |
          gcloud compute instance-groups managed wait-until $INSTANCE_GROUP \
            --zone=$ZONE \
            --stable

      - name: Cleanup old templates
        run: |
          # List all templates older than 5 days
          OLD_TEMPLATES=$(gcloud compute instance-templates list \
            --filter="name~'$INSTANCE_GROUP-*' AND creationTimestamp<-P5D" \
            --format="value(name)")

          # Delete old templates
          for template in $OLD_TEMPLATES; do
            gcloud compute instance-templates delete $template --quiet
          done 